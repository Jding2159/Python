import paramiko
import datetime
import os
import csv

def get_ssh_connection(hostname, username, private_key_path):
    """Establishes an SSH connection"""
    private_key = paramiko.RSAKey.from_private_key_file(private_key_path)
    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    client.connect(hostname=hostname, username=username, pkey=private_key)
    return client

def get_sftp_client(ssh_client):
    """Creates an SFTP client using an existing SSH connection"""
    return ssh_client.open_sftp()

def get_files_in_directory(sftp_client, directory):
    """Returns a list of filenames in the specified directory"""
    return sftp_client.listdir(directory)

def get_yesterday_and_today_filenames():
    """Returns the filenames for yesterday and today in the format 'yyyymmdd'"""
    today = datetime.date.today().strftime('%Y%m%d')
    yesterday = (datetime.date.today() - datetime.timedelta(days=1)).strftime('%Y%m%d')
    return yesterday, today

def compare_files(source_files, destination_files):
    """Compares the files between the source and destination directories"""
    missing_files_source = set(source_files) - set(destination_files)
    missing_files_destination = set(destination_files) - set(source_files)

    return missing_files_source, missing_files_destination

def export_file_list_to_csv(file_list, csv_filename):
    """Exports the file list to a CSV file"""
    with open(csv_filename, 'w', newline='') as csv_file:
        writer = csv.writer(csv_file)
        writer.writerow(['File Name'])
        writer.writerows([[file] for file in file_list])

def main():
    # Source and destination directory paths
    source_directory = '/path/to/source_directory'
    destination_directory = '\\\\windows_file_server\\path\\to\\destination_directory'

    # Source SSH credentials
    source_hostname = 'source_ssh_hostname'
    source_username = 'source_ssh_username'
    source_private_key_path = '/path/to/source_private_key'

    # Get SSH connection for source Linux host
    with get_ssh_connection(source_hostname, source_username, source_private_key_path) as source_ssh:
        # Create SFTP client from SSH connection
        source_sftp = get_sftp_client(source_ssh)

        # Get filenames for yesterday and today
        yesterday, today = get_yesterday_and_today_filenames()

        # Get files in source directory
        source_files = get_files_in_directory(source_sftp, source_directory)

        # Filter files for yesterday and today
        source_files = [file for file in source_files if file.startswith(yesterday) or file.startswith(today)]

        # Print source file list
        print("Source Files:")
        for file in source_files:
            print(file)

        # Close the SFTP client
        source_sftp.close()

        # Get files in destination directory
        destination_files = os.listdir(destination_directory)

        # Filter files for yesterday and today
        destination_files = [file for file in destination_files if file.startswith(yesterday) or file.startswith(today)]

        # Print destination file list
        print("Destination Files:")
        for file in destination_files:
            print(file)

        # Compare files
        missing_files_source, missing_files_destination = compare_files(source_files, destination_files)

        # Print the results
        if missing_files_source or missing_files_destination:
            print("Files missing:")
            if missing_files_source:
                print("Missing in source directory:", missing_files_source)
            if missing_files_destination:
                print("Missing in destination directory:", missing_files_destination)
        else:
            print("All files match in source and destination directories.")

if __name__ == '__main__':
    main()
